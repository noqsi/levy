/*
Status code enumeration. Comments refer specifically
to S_CAM1_POST et al.
*/

#define Result_Undefined 0 /* camera is off */
#define Result_Fail 1 /* camera is on but hasn't sent housekeeping yet, or in a while */
#define Result_Pass 2 /* camera is on and producing housekeeping on-time */

/*
Trigger SSR cleanup.
*/

S_SSR0_USED _/ 64000(4095)
	yellow spawn_program 16384
;

S_SSR0_USED \_ 59904(4095)
	green spawn_program 16385
;

/*
These count failures to deliver housekeeping.
*/

counter fpe0_fails, fpe1_fails, fpe2_fails, fpe3_fails;

/* 
These count limits out of range.
*/

counter fpe0_limit, fpe1_limit, fpe2_limit, fpe3_limit;

/*
Check limits first. This allows the checks for HK
validity to clear the limit violation counters before
the action logic does something silly.
*/

S_FPE0_PT1000_1 > 30 celsius
	yellow increment fpe0_limit
;

S_FPE0_PT1000_1 < 30 celsius
	green clear fpe0_limit
;

S_FPE1_PT1000_1 > 30 celsius
	yellow increment fpe1_limit
;

S_FPE1_PT1000_1 < 30 celsius
	green clear fpe1_limit
;

S_FPE2_PT1000_1 > 30 celsius
	yellow increment fpe2_limit
;

S_FPE2_PT1000_1 < 30 celsius
	green clear fpe2_limit
;

S_FPE3_PT1000_1 > 30 celsius
	yellow increment fpe3_limit
;

S_FPE3_PT1000_1 < 30 celsius
	green clear fpe3_limit
;

/*
If no HK, inhibit limits, but count HK failures.
*/

S_FPE0_POST == Result_Fail
	green increment fpe0_fails
	green clear fpe0_limit
;

S_FPE1_POST == Result_Fail
	green increment fpe1_fails
	green clear fpe1_limit
;

S_FPE2_POST == Result_Fail
	green increment fpe2_fails
	green clear fpe2_limit
;

S_FPE3_POST == Result_Fail
	green increment fpe3_fails
	green clear fpe3_limit
;

/*
Result_Undefined means power is off, so clear counters
to avoid silly actions.
*/

S_FPE0_POST == Result_Undefined
	green clear fpe0_fails
	green clear fpe0_limit
;

S_FPE1_POST == Result_Undefined
	green clear fpe1_fails
	green clear fpe1_limit
;

S_FPE2_POST == Result_Undefined
	green clear fpe2_fails
	green clear fpe2_limit
;

S_FPE3_POST == Result_Undefined
	green clear fpe3_fails
	green clear fpe3_limit
;

/*
If HK is good, clear HK fails, but let limit checks proceed.
*/

S_FPE0_POST == Result_Pass
	green clear fpe0_fails
;

S_FPE1_POST == Result_Pass
	green clear fpe1_fails
;

S_FPE2_POST == Result_Pass
	green clear fpe2_fails
;

S_FPE3_POST == Result_Pass
	green clear fpe3_fails
;

/*
Warn about HK failures.
*/

fpe0_fails _/ 6
	yellow no_action 0
;

fpe1_fails _/ 6
	yellow no_action 0
;

fpe2_fails _/ 6
	yellow no_action 0
;

fpe3_fails _/ 6
	yellow no_action 0
;

/*
If too many HK failures, power off.
*/

fpe0_fails _/ 60
	red camera_off 1
;

fpe1_fails _/ 60
	red camera_off 2
;

fpe2_fails _/ 60
	red camera_off 3
;

fpe3_fails _/ 60
	red camera_off 4
;

/*
Warn of overtemperature.
*/

fpe0_fails _/ 2
	yellow no_action 0
;

fpe1_fails _/ 2
	yellow no_action 0
;

fpe2_fails _/ 2
	yellow no_action 0
;

fpe3_fails _/ 2
	yellow no_action 0
;

/*
If temperature stays high, turn off camera.
*/

fpe0_fails _/ 20
	red camera_off 1
;

fpe1_fails _/ 20
	red camera_off 2
;

fpe2_fails _/ 20
	red camera_off 3
;

fpe3_fails _/ 20
	red camera_off 4
;
